using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Calculator : MonoBehaviour
{
    //델리게이트 선언
    delegate float Calculate(float a, float b);

    //델리게이트 변수 생성
    Calculate onCalculate;

    void Start()
    {
        //델리게이트에 Sum메서드 등록
        onCalculate = Sum;

        //델리게이트에 Substract메서드 추가
        onCalculate += Substract;
    }

    public float Sum(float a,float b)
    {
        Debug.Log(a + b);
        return a + b;
    }

    public float Substract(float a,float b)
    {
        Debug.Log(a - b);
        return a - b;
    }

    public float Multiply(float a,float b)
    {
        Debug.Log(a * b);
        return a * b;
    }

    void Update()
    {
        if (Input.GetKeyDown(KeyCode.Space))
        {
            //onCalculate 델리게이트에 등록된
            //명령이 이행됨(여기서는 Sum메서드만 등록됨)
            Debug.Log("결과값: " + onCalculate(1, 10));          
        }
    }
}

------------------------------------------------------

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Calculator : MonoBehaviour
{
    //델리게이트 선언
    delegate float Calculate(float a, float b);

    //델리게이트 변수 생성
    Calculate onCalculate;

    void Start()
    {
        //델리게이트에 Sum메서드 등록
        onCalculate = Sum;

        //델리게이트에 Substract메서드 추가
        onCalculate += Substract;

        //델리게이트에 Substract메서드 삭제
        onCalculate -= Substract;

        //델리게이트에 Multiply메서드 추가
        onCalculate += Multiply;
    }

    public float Sum(float a,float b)
    {
        Debug.Log(a + b);
        return a + b;
    }

    public float Substract(float a,float b)
    {
        Debug.Log(a - b);
        return a - b;
    }

    public float Multiply(float a,float b)
    {
        Debug.Log(a * b);
        return a * b;
    }

    void Update()
    {
        if (Input.GetKeyDown(KeyCode.Space))
        {
            onCalculate(1, 10);         
        }
    }
}

