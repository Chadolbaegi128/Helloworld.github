#include <iostream>

using namespace std;

int main() {
	int array[5] = { 3,2,4,1,3 };
	//배열: 단일 식별자를 통해 같은 자료형의 여러 변수에 접근할 수 있게 해주는 집계 데이터 유형

	//배열 변수의 값 출력-int[5]의 변수(배열 변수 자체는 마치 포인터처럼 배열의 첫 번째 요소의 주소를
	//가지고 있다.
	cout << "The array has address: " << array << "\n";//array 변수의 데이터 타입-int[5]

	//배열 요소의 주소 출력-배열 인덱스 '0'
	cout << "Element 0 has address: " << &array[0] << "\n";//배열에 대한 포인터-int*

	//포인터를 통해 배열의 모든 요소에 접근할 수 있지만, 배열 타입에서 파생된 정보(예: 배열 길이)
	//는 포인터에서 접근할 수 없다.
	//배열을 역참조 할때 배열 자체를 역참조하는 것이 아니라 해당 배열의 데이터타입 + 배열 길이로
	//이뤄진 포인터를 데이터타입의 포인터로 변환하여 역참조한다.
	//그리고 그 포인터를 통해 메모리의 주소값, 즉 배열의 첫 번째 요소의 값을 찾게 된다.
	//또한 배열을 포인터로 지정할 수 있다.

	char name[] = "yeonjun";
	cout << *name<<"\n";//'y'출력

	int parray[4] = { 2,1,4,10 };
	cout << *parray<<"\n";// 변수값 '2' 출력

	int* ptr = parray;
	cout << *ptr<<"\n"; //변수값 '2' 출력
	
	return 0;
}